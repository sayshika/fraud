<?xml version="1.0" encoding="UTF-8"?>
<executionPlan name="Markov_MissRateMetric" statistics="disable"
  trace="enable" xmlns="http://wso2.org/carbon/eventprocessor">
  <description/>
  <siddhiConfiguration>
    <property name="siddhi.persistence.snapshot.time.interval.minutes">0</property>
    <property name="siddhi.enable.distributed.processing">false</property>
  </siddhiConfiguration>
  <importedStreams>
    <stream as="stateStream" name="stateStream" version="1.0.0"/>
  </importedStreams>
  <queryExpressions><![CDATA[define table MarkovModelTable (transition string, firstState string, count double, probability double) from ('datasource.name'='FraudToolbox',  'table.name'='MarkovModelTable');

from every ta = stateStream ->
tb = stateStream
select tb.txnid, tb.cardnum, tb.itemNo, tb.txnamt, tb.currency, tb.email, tb.shippingaddress, tb.billingaddress, tb.ip, tb.qty, tb.timestamp, ta.state as firstState, concat(ta.state,tb.state) as transition
insert into metricStream;

//***************************** Determine Miss Rate value *******************************************************************************************************************************************

from metricStream[not((transition == MarkovModelTable.transition) in MarkovModelTable)]
select metricStream.txnid, metricStream.cardnum , metricStream.itemNo , metricStream.txnamt , metricStream.currency, metricStream.email, metricStream.shippingaddress, metricStream.billingaddress, metricStream.ip, metricStream.qty, metricStream.timestamp , metricStream.firstState , metricStream.transition , 1.0 as MissRateValue
insert into MissRateValueStream;

from metricStream as met join MarkovModelTable as mark
on met.transition == mark.transition
select met.txnid, met.cardnum , met.itemNo , met.txnamt , metricStream.currency, metricStream.email, metricStream.shippingaddress, metricStream.billingaddress, metricStream.ip, metricStream.qty, met.timestamp , met.firstState , met.transition , ( mark.probability) as MissRateValue
insert into MissRateValueStream;

//***************************** Find maximum Probability *******************************************************************************************************************************************

from metricStream join MarkovModelTable
on metricStream.firstState == MarkovModelTable.firstState
select metricStream.txnid,  max( MarkovModelTable.probability) as MaxProbability
insert into MaxProbabilityStream;

//***************************** Determine value as 0 or 1 *********************************************************************************************************************************************

from MaxProbabilityStream as max join MissRateValueStream as miss
on (max.txnid == miss.txnid) and not((miss.MissRateValue == MaxPrmaxobabilityStream.MaxProbability))
select miss.txnid, miss.cardnum , miss.itemNo , miss.txnamt ,  miss.currency, miss.email, miss.shippingaddress, miss.billingaddress, miss.ip, miss.qty, miss.timestamp , miss.firstState, miss.transition , 1 as DeterminedValue 
 insert into MissRateDeterminedValueStream;

from MaxProbabilityStream as max join MissRateValueStream as miss
on (max.txnid == miss.txnid) and ((miss.MissRateValue == max.MaxProbability))
select miss.txnid, miss.cardnum , miss.itemNo , miss.txnamt ,  miss.currency, miss.email, miss.shippingaddress, miss.billingaddress, miss.ip, miss.qty, miss.timestamp , miss.firstState, miss.transition , 0 as DeterminedValue
insert into MissRateDeterminedValueStream;

//***************************** Normalise the value ******************************************************************************************************************************************************

from MissRateDeterminedValueStream#window.length(5)
select txnid , cardnum , itemNo , txnamt , currency, email, shippingaddress, billingaddress, ip, qty, timestamp ,  firstState, transition  , DeterminedValue,  avg (DeterminedValue) as NormalizedValue 
group by cardnum
insert into NormalizedMissRateStream
for current-events;

from NormalizedMissRateStream[NormalizedValue > 0.8]
select txnid , cardnum , txnamt , currency, email, shippingaddress, billingaddress, ip, itemNo , qty, timestamp, 0.0 as score, 100 as fraudflag
insert into fraudStream;]]></queryExpressions>
  <exportedStreams>
    <stream name="fraudStream" valueOf="fraudStream" version="1.0.1"/>
  </exportedStreams>
</executionPlan>
