/* Enter a unique ExecutionPlan */
@Plan:name('GR_LargeItemQty')

/* Enter a unique description for ExecutionPlan */
-- @Plan:description('ExecutionPlan')

/* define streams/tables and write queries here ... */

@Plan:trace('false')

@Import('transactionStream:1.0.0')
define stream input (txnid string, cardnum long, txnamt double, currency string, email string, shippingaddress string, billingaddress string, ip string, itemNo string, qty int, timestamp long);

@Export('fraudStream:1.0.1')
define stream fraudStream (txnid string, cardnum long, txnamt double, currency string, email string, shippingaddress string, billingaddress string, ip string, itemNo string, qty int, timestamp long, score double, fraudflag int);

@from(eventtable = 'rdbms' , datasource.name = 'FraudToolbox' , table.name = 'avgQty')
define table avgQty ( itemNo string, avg double, stdev double );

from input[not((itemNo==avgQty.itemNo) in avgQty)]
select input.itemNo, input.qty*1.0 as avg, input.qty*1.0 as stdev
insert into avgQty;

from input#window.time(10 days) 
select itemNo, avg(qty)*1.0 as avg, max(qty)*1.0 as stdev
group by itemNo
update avgQty 
on itemNo ==avgQty.itemNo;

from input as i unidirectional join avgQty as av
on i.itemNo == av.itemNo
select txnid, cardnum, txnamt, currency, email, shippingaddress, billingaddress, ip, i.itemNo, qty, timestamp, av.avg, av.stdev
insert into tempStream;

from tempStream[qty > (avg+2*stdev)]
select txnid, cardnum, txnamt, currency, email, shippingaddress, billingaddress, ip, itemNo, qty, timestamp, 0.0 as score, 1 as fraudflag
insert into fraudStream;

from tempStream[qty <= (avg+2*stdev)]
select txnid, cardnum, txnamt, currency, email, shippingaddress, billingaddress, ip, itemNo, qty, timestamp, 0.0 as score, 1 as fraudflag
insert into outputStream;

                    
