<?xml version="1.0" encoding="UTF-8"?>
<executionPlan name="Markov_MatrixBuilder" statistics="disable"
  trace="enable" xmlns="http://wso2.org/carbon/eventprocessor">
  <description/>
  <siddhiConfiguration>
    <property name="siddhi.persistence.snapshot.time.interval.minutes">0</property>
    <property name="siddhi.enable.distributed.processing">false</property>
  </siddhiConfiguration>
  <importedStreams>
    <stream as="stateStream" name="stateStream" version="1.0.0"/>
  </importedStreams>
  <queryExpressions><![CDATA[define table MarkovModelTable (transition string, firstState string, count double, probability double) from ('datasource.name'='FraudToolbox', 'database.name'='fraud', 'table.name'='MarkovModelTable');
define table firstCountTable (firstState string, count double) from ('datasource.name'='FraudToolbox', 'database.name'='fraud', 'table.name'='firstCountTable');


from every a = stateStream -> b = stateStream
select a.state as firstState, b.state as nextState, concat(a.state,b.state) as transition
insert into transitionStream;

from transitionStream as t join firstCountTable as f
on t.firstState==f.firstState
select t.firstState, (f.count+1) as count
update firstCountTable
on t.firstState==f.firstState;

from transitionStream[not((transition==MarkovModelTable.transition) in MarkovModelTable)]
select transition, firstState, 1.0 as count, 0.0 as probability
insert into MarkovModelTable;

from transitionStream as t join MarkovModelTable as m
select t.transition, (count+1) as count
update MarkovModelTable
on transitionStream.transition == MarkovModelTable.transition;

from transitionStream as t join firstCountTable as f
on t.firstState == f.firstState
select t.transition, t.firstState, f.count
insert into temp;

from temp as t join MarkovModelTable as m
on t.firstState == m.firstState
select m.transition, m.firstState, m.count, (m.count/t.count) as probability
update MarkovModelTable
on t.firstState == m.firstState;]]></queryExpressions>
  <exportedStreams/>
</executionPlan>
