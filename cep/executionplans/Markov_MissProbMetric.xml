<?xml version="1.0" encoding="UTF-8"?>
<executionPlan name="Markov_MissProbMetric" statistics="disable"
  trace="enable" xmlns="http://wso2.org/carbon/eventprocessor">
  <description/>
  <siddhiConfiguration>
    <property name="siddhi.persistence.snapshot.time.interval.minutes">0</property>
    <property name="siddhi.enable.distributed.processing">false</property>
  </siddhiConfiguration>
  <importedStreams>
    <stream as="stateStream" name="stateStream" version="1.0.0"/>
  </importedStreams>
  <queryExpressions><![CDATA[define table MarkovModelTable (transition string, firstState string, count double, probability double) from ('datasource.name'='FraudToolbox','table.name'='MarkovModelTable');


from every ta = stateStream ->
tb = stateStream
select tb.txnid, tb.cardnum, tb.itemNo, tb.txnamt, tb.currency, tb.email, tb.shippingaddress, tb.billingaddress, tb.ip, tb.qty,  tb.timestamp, ta.state as nextState, concat(ta.state,tb.state) as transition
insert into metricStream;

//****************************************************** Calculate Miss Probability ***************************************************************************************************************************************************************
from metricStream[not((transition == MarkovModelTable.transition) in MarkovModelTable)]
select metricStream.txnid, metricStream.cardnum , metricStream.itemNo , metricStream.txnamt ,metricStream.currency, metricStream.email, metricStream.shippingaddress, metricStream.billingaddress, metricStream.ip, metricStream.qty, metricStream.timestamp , metricStream.nextState , metricStream.transition , 0.0 as MissProbability
insert into metricValueStream;

from metricStream join MarkovModelTable
on metricStream.transition == MarkovModelTable.transition
select metricStream.txnid, metricStream.cardnum , metricStream.itemNo , metricStream.txnamt ,metricStream.currency, metricStream.email, metricStream.shippingaddress, metricStream.billingaddress, metricStream.ip, metricStream.qty, metricStream.timestamp , metricStream.nextState , metricStream.transition , (1- MarkovModelTable.probability) as MissProbability
insert into metricValueStream;

//****************************************************** Normalize Miss Probability ******************************************************************************
from metricValueStream#window.length(5) as m
select txnid , cardnum , itemNo , txnamt , currency, email, shippingaddress, billingaddress, ip, qty,  timestamp , nextState, transition, avg (MissProbability) as NormalizeMissProbability
insert into NormalizeMissProbabilityStream
for current-events;


//****************************************************** Compare Normalize Miss Probability with Threshold ***************************************
from NormalizeMissProbabilityStream[NormalizeMissProbability < 10]
select txnid , cardnum , txnamt , currency, email, shippingaddress, billingaddress, ip, itemNo , qty, timestamp, 0.0 as score, 100 as fraudflag
insert into fraudStream;]]></queryExpressions>
  <exportedStreams>
    <stream name="fraudStream" valueOf="fraudStream" version="1.0.1"/>
  </exportedStreams>
</executionPlan>
